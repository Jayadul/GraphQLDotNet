// <auto-generated />
using System;
using GraphqlPractice.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphqlPractice.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphqlPractice.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71443600-4e7c-409a-9d59-c72214803a0e"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("41d123da-7727-4b7a-82dc-bbfd6e812f73"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ae99d4f3-ccda-4d45-be6f-8a4f25e0e819"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("21198b02-1ec8-4053-9f16-49a2cad96934"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4afd7957-5cf4-4bf2-94ae-e85caab25a05"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("21198b02-1ec8-4053-9f16-49a2cad96934"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphqlPractice.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41d123da-7727-4b7a-82dc-bbfd6e812f73"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("21198b02-1ec8-4053-9f16-49a2cad96934"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphqlPractice.Entities.Account", b =>
                {
                    b.HasOne("GraphqlPractice.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphqlPractice.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
